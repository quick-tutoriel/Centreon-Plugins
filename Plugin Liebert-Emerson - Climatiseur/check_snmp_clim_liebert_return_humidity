#!/usr/bin/perl -w

##
## Plugin init
##
use strict;
use Getopt::Long;
use vars qw($opt_h $opt_community $opt_version $opt_host $opt_minimumhumidity $opt_criticalhumidity);
use lib "/usr/lib/nagios/plugins";
use utils qw($TIMEOUT %ERRORS &print_revision &support);
use Net::SNMP;

##
## Constantes
##
my $Pourcentage_Warning = 10;

##
## Declaration des variables
##
my $SeuilWarning = "";
my $SeuilCritical = "";

##
## Plugin var init
##
Getopt::Long::Configure('bundling');
GetOptions
("h"	=>	\$opt_h,		"help"		=> \$opt_h,
 "C=s"	=>	\$opt_community,	"community=s"	=> \$opt_community,
 "V=s"  =>	\$opt_version,		"version=s"	=> \$opt_version, 
 "H=s"	=>	\$opt_host,		"host=s"	=> \$opt_host,
 "m=s"	=>	\$opt_minimumhumidity,	"warning=s"	=> \$opt_minimumhumidity,
 "c=s"	=>	\$opt_criticalhumidity,	"critical=s"	=> \$opt_criticalhumidity);

if ($opt_h){
  print "Usage du plugin :\n";
  print "-h (--help) 		Affiche l'aide\n";
  print "-C (--community)	Valeur de la communaute\n";
  print "-V (--version)		SNMP Version (1-2C-3)\n";
  print "-H (--hostname)	Adresse IP de l'host\n";
  print "-m (--minimumhumidity) Valeur Minimum d'humidite\n";
  print "-c (--criticalhumidity)Valeur Maximum d'humidite\n";
  exit ($ERRORS{'UNKNOWN'});
}

if (!defined($opt_community)){
   print "Vous devez saisir une communaute\n";
   exit ($ERRORS{'UNKNOWN'});
}
elsif (!defined($opt_version)){
   print "Vous devez saisir la version de SNMP\n";
   exit ($ERRORS{'UNKNOWN'});
}
elsif (!defined($opt_host)){
   print "Vous devez saisir une adresse ip pour le host\n";
   exit ($ERRORS{'UNKNOWN'});
}
elsif (!defined($opt_minimumhumidity)){
   print "Vous devez saisir une valeur MINI pour le pourcentage d'humidite\n";
   exit ($ERRORS{'UNKNOWN'});
}
elsif (!defined($opt_criticalhumidity)){
   print "Vous devez saisir une valeur MAXI pour le pourcentage d'humidite\n";
   exit ($ERRORS{'UNKNOWN'});
}

##
## Initialisation connexion SNMP sur un hôte
my ($session, $error) = Net::SNMP ->session(-community => $opt_community,
					    -version => $opt_version,
					    -hostname => $opt_host,
					    );
if (!defined($session)){
  print ("UNKNOWN: $error\n");
  exit ($ERRORS{'UNKNOWN'});
}

##
## Affiche le pourcentage d'utilisation de la capacite frigorifique de la climatisation en cours d'utilisation.
##
my $snmp_oid = "1.3.6.1.4.1.476.1.42.3.4.2.2.3.1.50.1";


##
## Permet de faire un get sur une feuille (OID)
##
my $resultOID = $session->get_request(-varbindlist => [$snmp_oid]);
if (!defined($resultOID)) {
	printf("UNKNOWN: %s.\n", $session->error);
	$session->close;
	exit $ERRORS{'UNKNOWN'};
}

##
## Récupération de la valeur de OID
##
my $result = $resultOID->{$snmp_oid};
# Ilf aut divise par 10 pour avoir le pourcentage d'humidite
$result = $result / 10;

##
## Definition des valeurs Mini et Maxi pour afficher l'etat warning.
## On se base sur la constante $Pourcentage_Warning qui est par defaut à 10%.
##
$SeuilWarning = ((($opt_minimumhumidity * $Pourcentage_Warning)/100) + $opt_minimumhumidity);
$SeuilCritical = ($opt_criticalhumidity - (($opt_criticalhumidity * $Pourcentage_Warning)/100));

##
## Déclaration d'une variable pour récupérer le statut, pour l'afficher dans la sortie. Par défaut OK
##
my $status = 'OK';

##
## Test des conditions pour attribuer le status CRITICAL ou WARNING
## Le pourcentage d'humidite dans dans une salle serveur devrait être compris entre 40% et 60%
## Nous afficherons un Warning dès que 10% de la valeur Mini ou Maxi sera atteinte.
##
if ( $result <= $opt_minimumhumidity || $result >= $opt_criticalhumidity ) {
       $status = 'CRITICAL';
      }
	elsif ( $result <= $SeuilWarning  || $result >= $SeuilCritical ){
           $status = 'WARNING';
      }
  
## Affichage des informations dans Centreon
printf("$status Humidity (%%): %d  (Seuils Mini:$opt_minimumhumidity Maxi:$opt_criticalhumidity)|Humidity=%d, Mini_Humidity=$opt_minimumhumidity, Maxi_Humidity=$opt_criticalhumidity\n", $result,$result);
exit $ERRORS{$status};
